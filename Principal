import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class PizzeriaApp extends JFrame {
    private DefaultListModel<String> pedidosModel;

    public PizzeriaApp() {
        setTitle("Pizzería App");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // Inicializar el modelo de lista para los pedidos
        pedidosModel = new DefaultListModel<>();

        // Crear un panel principal con BorderLayout
        JPanel mainPanel = new JPanel(new BorderLayout());

        // Crear botones para tomar pedidos
        JButton mostrarPedidoBtn = new JButton("Tomar Pedido Mostrador");
        JButton deliveryPedidoBtn = new JButton("Tomar Pedido Delivery");

        // Configurar los botones para estar en la esquina derecha y ser grandes
        mostrarPedidoBtn.setPreferredSize(new Dimension(150, 50));
        deliveryPedidoBtn.setPreferredSize(new Dimension(150, 50));

        // Agregar los botones en la esquina derecha
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        buttonPanel.add(mostrarPedidoBtn);
        buttonPanel.add(deliveryPedidoBtn);
        mainPanel.add(buttonPanel, BorderLayout.NORTH);

        // Crear una lista para mostrar los pedidos
        JList<String> pedidosList = new JList<>(pedidosModel);
        mainPanel.add(new JScrollPane(pedidosList), BorderLayout.CENTER);

        // Manejar eventos de los botones
        mostrarPedidoBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mostrarFormularioPedidoMostrador();
            }
        });

        deliveryPedidoBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                mostrarFormularioPedidoDelivery();
            }
        });

        add(mainPanel);
    }

    private void mostrarFormularioPedidoMostrador() {
        // Crear un panel para el formulario de pedido en el mostrador
        JPanel panel = new JPanel(new BorderLayout());
        JComboBox<String> categoriaCombo = new JComboBox<>(new String[]{"Empanadas/Pizzas", "Bebidas"});
        JList<String> productosList = new JList<>();
        DefaultListModel<String> productosModel = new DefaultListModel<>();
        JSpinner cantidadSpinner = new JSpinner();
        JSpinner cantidadBebidaSpinner = new JSpinner();

        categoriaCombo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String categoriaSeleccionada = (String) categoriaCombo.getSelectedItem();
                productosModel.clear();

                if (categoriaSeleccionada.equals("Empanadas/Pizzas")) {
                    // Agregar productos de la categoría "Empanadas/Pizzas"
                    productosModel.addElement("Pizza Margarita");
                    productosModel.addElement("Pizza Pepperoni");
                    productosModel.addElement("Empanada de Carne");
                } else if (categoriaSeleccionada.equals("Bebidas")) {
                    // Agregar productos de la categoría "Bebidas"
                    productosModel.addElement("Coca-Cola");
                    productosModel.addElement("Agua Mineral");
                    productosModel.addElement("Jugo de Naranja");
                }
            }
        });

        productosList.setModel(productosModel);

        // Configurar el spinner de cantidad
        cantidadSpinner.setModel(new SpinnerNumberModel(0, 0, 100, 1));
        cantidadBebidaSpinner.setModel(new SpinnerNumberModel(0, 0, 100, 1));

        // Agregar componentes al panel
        JPanel categoriaPanel = new JPanel(new BorderLayout());
        JPanel productoPanel = new JPanel(new BorderLayout());
        JPanel cantidadPanel = new JPanel(new BorderLayout());
        JPanel cantidadBebidaPanel = new JPanel(new BorderLayout());

        categoriaPanel.add(new JLabel("Categoría:"), BorderLayout.WEST);
        categoriaPanel.add(categoriaCombo, BorderLayout.CENTER);

        productoPanel.add(new JLabel("Productos:"), BorderLayout.WEST);
        productoPanel.add(new JScrollPane(productosList), BorderLayout.CENTER);

        cantidadPanel.add(new JLabel("Cantidad (Comida):"), BorderLayout.WEST);
        cantidadPanel.add(cantidadSpinner, BorderLayout.CENTER);

        cantidadBebidaPanel.add(new JLabel("Cantidad (Bebida):"), BorderLayout.WEST);
        cantidadBebidaPanel.add(cantidadBebidaSpinner, BorderLayout.CENTER);

        panel.add(categoriaPanel, BorderLayout.NORTH);
        panel.add(productoPanel, BorderLayout.CENTER);
        panel.add(cantidadPanel, BorderLayout.SOUTH);
        panel.add(cantidadBebidaPanel, BorderLayout.SOUTH);

        int result = JOptionPane.showConfirmDialog(this, panel, "Tomar Pedido Mostrador", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            String categoria = (String) categoriaCombo.getSelectedItem();
            String producto = productosList.getSelectedValue();
            int cantidadComida = (int) cantidadSpinner.getValue();
            int cantidadBebida = (int) cantidadBebidaSpinner.getValue();

            // Agregar el pedido a la lista
            String pedido = "Mostrador - Categoría: " + categoria + ", Producto (Comida): " + producto + ", Cantidad (Comida): " + cantidadComida + ", Cantidad (Bebida): " + cantidadBebida;
            pedidosModel.addElement(pedido);
        }
    }

    private void mostrarFormularioPedidoDelivery() {
        // Código para el formulario de pedido de delivery (igual al ejemplo anterior)
        // ...
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                PizzeriaApp app = new PizzeriaApp();
                app.setVisible(true);
            }
        });
    }
}
